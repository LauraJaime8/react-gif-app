{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAkBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCTdG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DACfC,EADe,iDACiCC,UAAUR,GAD3C,+DAEFS,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAThB,kBAYdM,GAZc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHEO,EAAU,SAAC,GAAmB,IAAhBxB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEdR,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAVAC,qBAAW,WACTvB,EAAQL,GACL6B,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACzB,IAEG0B,EDhB0BK,CAAa/B,GAAjCkB,EAF2B,EAEhCN,KAAaa,EAFmB,EAEnBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDrB,IAClDyB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEZXgB,EAAe,WAAO,IAAD,EAEIxC,mBAAS,CAAC,aAFd,mBAEzByC,EAFyB,KAEb1C,EAFa,KAIhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI0C,EAAWnB,KAAK,SAACd,GAAD,OACd,cAAC,EAAD,CAEEA,SAAYA,GADNA,Y,MCXpBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.077905e5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n  // Si no le queremos pasar nada en useState, mejor pasarle algo vacío.\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length > 2) {\n      setCategories(category => [inputValue, ...category, ]);\n      setInputValue('');\n    }\n  }\n\n  return (\n    <form onSubmit= { handleSubmit }>\n      <input\n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange  }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BfKmWUL4PDpHhfZUUsZIz2I9SKvGGMuE`\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  })\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={ url } alt={ title} />\n      <p>{ title }</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category }) => {\n\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n      <div className=\"card-grid\">\n        {\n          images.map( img => (\n            <GifGridItem\n              key={ img.id }\n              { ...img }\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  // Ejecuta la función getGifs cuando el componente se renderiza\n  // la primera vez.\n  useEffect( () => {\n    getGifs(category)\n      .then( imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        })\n      })\n  }, [category])\n\n  return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Suspiria'])\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n\n      <ol>\n        {\n          categories.map( (category) => (\n            <GifGrid \n              key={ category }\n              category= { category }\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}